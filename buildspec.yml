version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
      python: 3.9
    commands:
      - echo "Installing CDK and dependencies..."
      - cd cdk
      - npm install  # Install Node.js dependencies for the CDK app
      - pip install -r ../requirements.txt  # Install Python dependencies for the Lambda function

  pre_build:
    commands:
      - echo "Checking environment information..."
      - node -v  # Display Node.js version
      - npm -v  # Display NPM version
      - cd ../cdk
      - cdk --version  # Display AWS CDK version
      - echo "Listing contents of the 'lambda' directory:"
      - ls -la ../lambda/  # Verify lambda directory contents

  build:
    commands:
      - echo "Synthesizing the CDK stack..."
      - cdk synth --app "npx ts-node --prefer-ts-exts ./bin/cdk.ts"  # Adjust path if the entry file name differs
      - echo "Packaging Lambda function..."
      - cd ../lambda
      - zip handler.zip handler.py  # Package the Lambda function
      - mv handler.zip ../cdk  # Move the packaged zip file to the CDK directory for deployment access

  post_build:
    commands:
      - echo "Deploying the CDK stack..."
      - cd ../cdk
      - cdk deploy --app "npx ts-node --prefer-ts-exts ./bin/cdk.ts" --require-approval never

artifacts:
  files:
    - cdk/handler.zip  # Include the packaged Lambda function
    - cdk/cdk.out/**/*  # Include synthesized CDK output for deployment
