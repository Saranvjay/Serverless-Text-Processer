version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: 18
      python: 3.9
    commands:
      - echo "Installing dependencies..."
      - npm install aws-cdk-lib  # Install the AWS CDK library for TypeScript
      - npm install -g aws-cdk  # Install AWS CDK CLI globally
      - npm install typescript ts-node  # Install TypeScript and ts-node
      - pip install -r requirements.txt  # Install Python dependencies
  pre_build:
    commands:
      - echo "Checking environment information..."
      - node -v # Node.js version
      - npm -v # NPM version
      - cdk --version  # Verify CDK is installed correctly
      # Print the current folder path
      - echo "Current folder path is:"
      - pwd

      
      - echo "Synthesizing the CDK stack..."
      - ls -la
      - npx ts-node --prefer-ts-exts ./cdk/bin/cdk.ts
      - cdk synth --app "npx ts-node --prefer-ts-exts ./cdk/bin/cdk.ts"
  build:
    commands:
      - echo "Packaging Lambda function..."
      - cd lambda
      - zip handler.zip handler.py
      - mv handler.zip ../cdk
  post_build:
    commands:
      - echo "Deploying the CDK stack..."
      - cd ../cdk
      - cdk deploy --app "npx ts-node --prefer-ts-exts ./bin/cdk.ts" --require-approval never
artifacts:
  files:
    - lambda/function.zip  # Include the packaged Lambda function
    - cdk.out/**/*  # Include synthesized CDK output for deployment
